import { DB } from "./utils/DB";
import { Git } from "./utils/Git";
import { filePathById, getCveFromFile } from "./utils/files";
import { findIds } from "./utils/utils";

export async function iterate(database: DB, git: Git) {
  // FIXME: This resets to the parent/previous commit, which is a hack to
  // include the current commit in the loop, in case changes are not already
  // applied. It's not super easy to fix in a better way right now, since we use
  // the git merge stdout to find updated CVEs.
  await git.goTo("HEAD^");

  for await (const stdout of git) {
    if (!stdout) continue;
    const ids = findIds(stdout);
    console.debug(`Updating ${ids.length} CVEs from ${await git.getCurrent()}`);
    ids.forEach((id) => {
      const path = filePathById(id);
      const row = getCveFromFile(git.dir + path);
      if (!row) return;
      database.upsertRow(row);
    });
  }
}
